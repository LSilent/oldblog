%title C语言二维数组和二维指针并不一样
Date:2012-10-24

看下面的三个二级指针a,b,c,它们都是等值的,不过类型不同,我们需要知道它们表示的含义和指向的内存块是怎样的:

```c
#include <stdio.h>
int main(int argc, const char *argv[])
{
	int a[2][3] = {
		{1, 2, 3}, 
		{4, 5, 6}
	}; 
	
	int **b = (int **)a; 
	
	int (*c)[6] = (int (*)[6])a; 
	printf("%d\n", a[0][1]);//2
	printf("%d\n", *(b+5));//6
	printf("%d\n", *(*c+3));//4
	return 0;
}
```

你可以用gdb调试也好,或者你本来就知道也好.这几个指针指向的内存块是这样的:
```
+---+---+---+---+---+---+
| 1 | 2 | 3 | 4 | 5 | 6 | 
+---+---+---+---+---+---+ 
```

它们是如上图那样连续存储的.

我们怎么用这三个指针来表示这些内存块上存储的数据呢?

如果我们用t表示a,b,c三者相等的内存地址数值

a[i][j]表示的是从地址t开始,数3*i个单元(方格),再数j个就找到了数据的地址,即`t+3\*i+j`


