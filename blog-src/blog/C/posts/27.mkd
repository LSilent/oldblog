%title C语言位操作基本技巧收集
Date:2012-11-08

[TOC]

## 1.位运算基本
C语言中位运算有: and ,or , xor, not ,shift left,shift right

<pre style="text-align:center">
+---+---+-----+-----+-----+----+
| a | b | a&b | a|b | a^b | ~a | 
+---+---+-----+-----+-----+----+
| 0 | 0 |  0  |  0  |  0  | 1  |
+---+---+-----+-----+-----+----+
| 0 | 1 |  0  |  1  |  1  | 1  |
+---+---+-----+-----+-----+----+
| 1 | 0 |  0  |  1  |  1  | 0  |
+---+---+-----+-----+-----+----+
| 1 | 1 |  1  |  1  |  0  | 0  |
+---+---+-----+-----+-----+----+
</pre>

## 2.基本技巧

### 1.一些等式
** ~a+1=-a **(求相反数是:取反再加一)

** ~(a+b)=~a+~b+1 **

证明:~(a+b)=-(a+b)-1=(-a-1)+(-b-1)+1=~a+~b+1 (依据公式~a=-a-1)

** a^a=0 **

** a^0=a **

** a^b=b^a ** (交换律)

** (a^b)^c=a^(b^c) **(结合律)

** (~a)^b=a^(~b)=~(a^b) **(可以枚举归纳证之)

** c=a^b => b=a^c **

证:c=a^b => a^c=a^a^b => a^c=0^b => a^c=b

** (a-1)^(-a)=-1 **

证明:令b=-a 即证 (-b-1)^b=-1 即证 ~b^b=-1 : ~b^b=~(b^b)=~0=-1

### 2.应用技巧

#### 1.整数奇偶性判断

a&1可以判断a的奇偶性.二进制的末位为1表示为奇数,否则偶数

#### 2.判断整数的符号

```c
#define INT_BITS sizeof(int)*8  //number of bits of integer
int signof(int n)
{
	return n >> INT_BITS-1; 
}
```

返回-1表示负数,返回0表示非负数

#### 3.
