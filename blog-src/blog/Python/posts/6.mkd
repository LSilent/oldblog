%title python itertools模块学习笔记
Date:2012-10-25

以下函数均返回迭代器

[TOC]

### 1.count
原型:
```python
count(start[, step])
```
返回:

start, start+step, start+2*step, ... (以start为首项, step为公差的等差数列)

example:

```python
count(10):10, 11, 12, 13, .....
```

### 2.cycle

原型:
```
cycle(p)
```

返回:

p0, p1, p2, ...,plast, p0, p1, ... (对序列循环遍历)

### 3.repeat
原型
```
repeat(elem[, n])
```
返回:

elem, elem, elem...( 重复n次或者无限下去)

### 4.chain

原型:
```
chain(p, q, ...)
```
返回:

p0, p1, ..., plast, q0, q1, ..., qlast, ... (一个一个地遍历这些序列的, 不必生成大序列即可这样遍历)

### 5.compress
原型:
```
compress(data d, selector s)
```
返回:

(d[0] if s[0]), (d[1] if s[1]), ...

例子:
```python
from itertools import *
for i in compress("abcdef", [1, 1, 0, 1, 0, 1]): # a, b, d, f
	print i
```
### dropwhile

原型:
```
dropwhile(func f, seq q)
```
返回:

当函数f执行返回假时, 开始迭代序列

例子:
```python
from itertools import *
for i in dropwhile(lambda x:x<5, [1, 2, 6, 4, 3]):#6, 4, 3
	print i
```

### groupby

原型:
```
groupby(iterable[, keyfunc])
```
返回:按照keyfunc函数对序列每个元素执行后的结果分组(每个分组是一个迭代器), 返回这些分组的迭代器

例子:
```python
from itertools import *
a = ['aa', 'ab', 'abc', 'bcd', 'abcde']
for i, k in groupby(a, len):#按照字符串的长度对a的每个元素进行分组
	for m in k:
		print m, 
	print i
```
输出:
```
aa ab 2
abc bcd 3
abcde 5
```
### ifilter
原型:
```
ifilter(func, seq)
```
返回:对函数func执行返回真的元素的迭代器

例子:
```python
from itertools import *
a = [1, 2, 3, 4, 5]
for i in ifilter(lambda x:x>3, a):#4, 5
	print i
```
